@page
@model DarkWar_WebApp.Pages.AddPlayerModel
@{
    ViewData["Title"] = "Add Player";
}

<h2 class="text-light mb-2">Add Player</h2>

<form method="post" class="flex-fill d-flex flex-column">
    <div class="d-flex flex-column text-light">
            <div class="form-group mb-4">
                <label asp-for="PlayerName"></label>
                <input asp-for="PlayerName" class="form-control bg-dark border-0 text-light" type="text" id="playerNameInput" oninput="updatePreviewName()" />
            </div>

            <div class="form-group mb-4">
                <label asp-for="CP"></label>
                <input asp-for="CP" class="form-control bg-dark border-0 text-light" type="text" id="cpInput" oninput="updatePreviewCP()" />
            </div>

            <div class="form-group mb-4">
                <label asp-for="SelectedRank"></label>
                <select asp-for="SelectedRank" class="form-control bg-dark border-0 text-light" id="rankInput" onchange="updatePreviewRank()">
                    <option value="">-- Choose Rank --</option>
                    @foreach (var rank in Model.Ranks)
                    {
                        <option value="@rank.Value">@rank.Text</option>
                    }
                </select>
            </div>

            <div class="form-group mb-4">
                <label asp-for="WatchtowerLevel"></label>
                    <select asp-for="WatchtowerLevel" class="form-control bg-dark border-0 text-light" id="watchtowerInput" onchange="updatePreviewWatchtower()">
                    @for (int i = 1; i <= 60; i++)
                    {                        
                        if (i > 30)
                        {
                            <option value="@i">@($"30 + {i - 30}")</option>
                        }
                        else 
                        {
                            <option value="@i">@i</option>
                        }
                    }
                }
                </select>
            </div>
    </div>

    <div class="col-md-4 d-flex flex-column">
        <div class="card bg-transparent text-light flex-fill border-0">📝 Preview</div>
        <ul class="list-group list-group-flush">
            <li class="list-group-item bg-dark text-light mb-4"><strong>Name:</strong> <span id="previewName">-</span></li>
            <li class="list-group-item bg-dark text-light mb-4"><strong>CP:</strong><span id="previewCP">@Model.CP.ToString("N0")</span></li>
            <li class="list-group-item bg-dark text-light mb-4"><strong>Rank:</strong> <span id="previewRank">-</span></li>
            <li class="list-group-item bg-dark text-light mb-4"><strong>Watchtower Level:</strong> <span id="previewWatchtower">-</span></li>
        </ul>
        <div class="card-footer">
            <button type="submit" class="btn btn-primary bg-dark border-light align-items-center w-100">Add Player</button>
        </div>
    </div>
</form>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const inputs = ["playerNameInput", "cpInput", "rankInput", "watchtowerInput"];

        // Event-Listener setzen
        inputs.forEach(id => {const el = document.getElementById(id);
            if (!el) return;

            if (el.tagName === "SELECT") 
            {
                el.addEventListener("change", updatePreview);
            } 
            else if (el.tagName === "INPUT")
            {
                el.addEventListener("input", updatePreview);
            }
        });

        // Direkt einmal ausführen, damit beim Laden alles angezeigt wird
        updatePreview();
    });

    function updatePreviewCP() {
        document.getElementById("previewCP").innerText = document.getElementById("cpInput").value || "-";
    }

    function updatePreviewName() {
        document.getElementById("previewName").innerText = document.getElementById("playerNameInput").value || "-";
    }

    function updatePreviewRank() {
        const rankSelect = document.getElementById("rankInput");
        document.getElementById("previewRank").innerText = rankSelect.options[rankSelect.selectedIndex]?.text || "-";
    }

    function updatePreviewWatchtower(){
        const watchtowerSelect = document.getElementById("watchtowerInput");
        document.getElementById("previewWatchtower").innerText = watchtowerSelect.options[watchtowerSelect.selectedIndex]?.text || "-";
    }
</script>


@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success" style="background-color: #d4edda; color: #155724; border-color: #c3e6cb;">
        @TempData["SuccessMessage"]
    </div>
}

@if (TempData["DoublePlayer"] != null)
{
    <div class="alert alert-success" style="background-color: #fff3cd; color: #856404; border-color: #ffeeba;">
        @TempData["DoublePlayer"]
    </div>
}

@section Scripts {
    <script>
        $(document).ready(function () {
            $('.watchtower-select').select2({
                minimumResultsForSearch: Infinity,
                dropdownAutoWidth: true,
                dropdownCssClass: "limit-height",
            });
        });
    </script>

    <style>
        .select2-results__options {
            max-height: 250px !important; 
            min-width: auto;
            overflow-y: auto !important;
        }
    </style>
}