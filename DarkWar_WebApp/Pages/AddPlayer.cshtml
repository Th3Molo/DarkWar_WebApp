@page
@model DarkWar_WebApp.Pages.AddPlayerModel
@{
    ViewData["Title"] = "Add Player";
}

<h2 class="text-light mb-2">Add Player</h2>

<form method="post" class="flex-fill d-flex flex-column">
    <div class="col-md-6 d-flex flex-column text-light">
            <div class="form-group mb-4">
                <label asp-for="PlayerName"></label>
                <input asp-for="PlayerName" class="form-control bg-dark border-0 text-light" id="playerNameInput" oninput="updatePreview()" />
            </div>

            <div class="form-group mb-4">
                <label asp-for="CP"></label>
                <input asp-for="CP" class="form-control bg-dark border-0 text-light" type="text" id="cpInput" oninput="updatePreview()" />
            </div>

            <div class="form-group mb-4">
                <label asp-for="SelectedRank"></label>
                <select asp-for="SelectedRank" class="form-control bg-dark border-0 text-light" id="rankInput" oninput="updatePreview()">
                    <option value="">-- Choose Rank --</option>
                    @foreach (var rank in Model.Ranks)
                    {
                        <option value="@rank.Value">@rank.Text</option>
                    }
                </select>
            </div>

            <div class="form-group mb-4">
                <label asp-for="WatchtowerLevel"></label>
                <select asp-for="WatchtowerLevel" class="form-control bg-dark border-0 text-light" id="watchtowerInput" oninput="updatePreview()">
                    @for (int i = 1; i <= 60; i++)
                    {                        
                        if (i > 30)
                        {
                            <option value="@i">@($"30 + {i - 30}")</option>
                        }
                        else 
                        {
                            <option value="@i">@i</option>
                        }
                    }
                }
                </select>
            </div>
    </div>

    <div class="col-md-4 d-flex flex-column">
        <div class="card bg-transparent text-light flex-fill border-0">📝 Preview</div>
        <ul class="list-group list-group-flush">
            <li class="list-group-item bg-dark text-light mb-4"><strong>Name:</strong> <span id="previewName">-</span></li>
            <li class="list-group-item bg-dark text-light mb-4">
                <strong>CP:</strong>
                <span id="previewCP">@Model.CP.ToString("N0")</span>
            </li>
            <li class="list-group-item bg-dark text-light mb-4"><strong>Rank:</strong> <span id="previewRank">-</span></li>
            <li class="list-group-item bg-dark text-light mb-4"><strong>Watchtower Level:</strong> <span id="previewWatchtower">-</span></li>
        </ul>
        <div class="card-footer">
            <button type="submit" class="btn btn-primary bg-dark border-light align-items-center w-100">Add Player</button>
        </div>
    </div>
</form>

<script>
    function updatePreview() {
        document.getElementById("previewName").innerText = document.getElementById("playerNameInput").value || "-";
        document.getElementById("previewCP").innerText = document.getElementById("cpInput").value || "-";
        document.getElementById("previewRank").innerText = document.getElementById("rankInput").value || "-";
        document.getElementById("previewWatchtower").innerText = document.getElementById("watchtowerInput").value || "-";
    }
</script>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success" style="background-color: #d4edda; color: #155724; border-color: #c3e6cb;">
        @TempData["SuccessMessage"]
    </div>
}

@if (TempData["DoublePlayer"] != null)
{
    <div class="alert alert-success" style="background-color: #fff3cd; color: #856404; border-color: #ffeeba;">
        @TempData["DoublePlayer"]
    </div>
}



@section Scripts {
    <script>
        $(document).ready(function () {
            $('.watchtower-select').select2({
                minimumResultsForSearch: Infinity, // kein Suchfeld
                dropdownAutoWidth: true,
                dropdownCssClass: "limit-height",
            });
        });
    </script>

    <script>
        function updatePreview() {
        const cpInput = document.getElementById("cpInput").value;
        const cpFormatted = Number(cpInput.replace(/\D/g, '')).toLocaleString('de-DE');
        document.getElementById("previewCP").textContent = cpFormatted || '-';
    }
    </script>

    <style>
        .select2-results__options {
            max-height: 250px !important; 
            min-width: auto;
            overflow-y: auto !important;
        }
    </style>
}